{"cells":[{"cell_type":"markdown","metadata":{"id":"r6vgge28bsTY"},"source":["# Connect colab to Google Drive"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17592,"status":"ok","timestamp":1639959832088,"user":{"displayName":"Wolfgang Gruen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01742609913198784862"},"user_tz":300},"id":"7uKG3cHUjFI4","outputId":"45ad4641-5bd9-4a4f-c167-8ecd184e384d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","drive  sample_data\n","/content\n","physical devises\n","[]\n","tensorflow version\n","2.7.0\n","keras version\n","2.7.0\n"]}],"source":["from google.colab import drive\n","import tensorflow as tf\n","from tensorflow import keras as keras\n","\n","drive.mount('/content/drive')\n","!ls\n","!pwd\n","\n","physical_devices = tf.config.list_physical_devices('GPU')\n","print(\"physical devises\")\n","print(physical_devices)\n","\n","print(\"tensorflow version\")\n","print(tf.__version__)\n","print(\"keras version\")\n","print(keras.__version__)"]},{"cell_type":"markdown","source":["# Run the machine"],"metadata":{"id":"Nwhz-LWcOW1R"}},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"PmnklYq65Cx6","executionInfo":{"status":"ok","timestamp":1639963532496,"user_tz":300,"elapsed":3700434,"user":{"displayName":"Wolfgang Gruen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01742609913198784862"}},"outputId":"a2e000c2-f2da-42c0-d5fc-da6fe0caba06"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/colab_wolfs_git_clones/lizard\n","first_neural_nets  nmf\tpicture_problem  README.md  statistical_analysis\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard/picture_problem\n","cifar-10-batches-py\n","cifar-10-batches.yaml\n","kera.cifar-10.trained-3vgg--epochs-10--dropout-0.1--l2_reg-0.1.bin\n","kera.cifar-10.trained-3vgg--epochs-1--dropout-0.1--l2_reg-0.1.bin\n","output\n","picture_3vgg_layers.py\n","picture_3vvg_layer\n","README.md\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard/picture_problem\n","Requirement already satisfied: reportlab in /usr/local/lib/python3.7/dist-packages (3.6.3)\n","Requirement already satisfied: pillow>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from reportlab) (7.1.2)\n","Description: This configuration file is for the CFAR-10 data set. The CFAR32 data\n","  set consists of pictures of size 32x32. The model will have to accomodate these\n","  dimensions\n","dropout_percentage_range:\n","- 10\n","evaluate_the_model: 0\n","fit_the_model: 1\n","machine_dump_file_name_base: kera.cifar-10.trained\n","mkernel_regularizer_l2_range:\n","- 0.1\n","number_of_epochs: 10\n","verbose: 1\n","\n","Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n","170500096/170498071 [==============================] - 4s 0us/step\n","170508288/170498071 [==============================] - 4s 0us/step\n","Train:few images\n","\n","picture shape: (32, 32, 3)\n","picture 32x32 pixels - row: 32\n","picture 32x32 pixels - column  : 32\n","picture one pixel RGB  : 3\n","picture data:\n"," [[[ 59  62  63]\n","  [ 43  46  45]\n","  [ 50  48  43]\n","  ...\n","  [158 132 108]\n","  [152 125 102]\n","  [148 124 103]]\n","\n"," [[ 16  20  20]\n","  [  0   0   0]\n","  [ 18   8   0]\n","  ...\n","  [123  88  55]\n","  [119  83  50]\n","  [122  87  57]]\n","\n"," [[ 25  24  21]\n","  [ 16   7   0]\n","  [ 49  27   8]\n","  ...\n","  [118  84  50]\n","  [120  84  50]\n","  [109  73  42]]\n","\n"," ...\n","\n"," [[208 170  96]\n","  [201 153  34]\n","  [198 161  26]\n","  ...\n","  [160 133  70]\n","  [ 56  31   7]\n","  [ 53  34  20]]\n","\n"," [[180 139  96]\n","  [173 123  42]\n","  [186 144  30]\n","  ...\n","  [184 148  94]\n","  [ 97  62  34]\n","  [ 83  53  34]]\n","\n"," [[177 144 116]\n","  [168 129  94]\n","  [179 142  87]\n","  ...\n","  [216 184 140]\n","  [151 118  84]\n","  [123  92  72]]]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["my_kernel_regularizer {'l2': 0.10000000149011612}\n","Epoch 1/10\n","782/782 [==============================] - 370s 472ms/step - loss: 30.2455 - accuracy: 0.2125 - val_loss: 6.0472 - val_accuracy: 0.2624\n","Epoch 2/10\n","782/782 [==============================] - 366s 468ms/step - loss: 3.3701 - accuracy: 0.2521 - val_loss: 2.3418 - val_accuracy: 0.2619\n","Epoch 3/10\n","782/782 [==============================] - 366s 468ms/step - loss: 2.2197 - accuracy: 0.2567 - val_loss: 2.1579 - val_accuracy: 0.2623\n","Epoch 4/10\n","782/782 [==============================] - 365s 467ms/step - loss: 2.1467 - accuracy: 0.2583 - val_loss: 2.1276 - val_accuracy: 0.2702\n","Epoch 5/10\n","782/782 [==============================] - 366s 467ms/step - loss: 2.1370 - accuracy: 0.2628 - val_loss: 2.1101 - val_accuracy: 0.2749\n","Epoch 6/10\n","782/782 [==============================] - 365s 467ms/step - loss: 2.1299 - accuracy: 0.2648 - val_loss: 2.1024 - val_accuracy: 0.2752\n","Epoch 7/10\n","782/782 [==============================] - 365s 467ms/step - loss: 2.1245 - accuracy: 0.2655 - val_loss: 2.1019 - val_accuracy: 0.2728\n","Epoch 8/10\n","782/782 [==============================] - 365s 467ms/step - loss: 2.1180 - accuracy: 0.2652 - val_loss: 2.1052 - val_accuracy: 0.2727\n","Epoch 9/10\n","782/782 [==============================] - 365s 467ms/step - loss: 2.1141 - accuracy: 0.2678 - val_loss: 2.0919 - val_accuracy: 0.2813\n","Epoch 10/10\n","782/782 [==============================] - 364s 466ms/step - loss: 2.1133 - accuracy: 0.2671 - val_loss: 2.0980 - val_accuracy: 0.2735\n","INFO:tensorflow:Assets written to: kera.cifar-10.trained-3vgg--epochs-10--dropout-0.1--l2_reg-0.1.bin/assets\n"]},{"output_type":"stream","name":"stderr","text":["INFO:tensorflow:Assets written to: kera.cifar-10.trained-3vgg--epochs-10--dropout-0.1--l2_reg-0.1.bin/assets\n"]},{"output_type":"stream","name":"stdout","text":["fit_history {'loss': [30.2454833984375, 3.370105743408203, 2.219660758972168, 2.1467413902282715, 2.137049436569214, 2.129877805709839, 2.124511241912842, 2.1179704666137695, 2.114081382751465, 2.1132755279541016], 'accuracy': [0.21252000331878662, 0.2520799934864044, 0.2566800117492676, 0.2583000063896179, 0.26284000277519226, 0.2648400068283081, 0.2655400037765503, 0.2652199864387512, 0.2678399980068207, 0.2671400010585785], 'val_loss': [6.047215461730957, 2.3417680263519287, 2.1579325199127197, 2.1276159286499023, 2.110092878341675, 2.1024155616760254, 2.1018521785736084, 2.1052346229553223, 2.0919384956359863, 2.098020315170288], 'val_accuracy': [0.2624000012874603, 0.26190000772476196, 0.2623000144958496, 0.2702000141143799, 0.27489998936653137, 0.2752000093460083, 0.2727999985218048, 0.2727000117301941, 0.28130000829696655, 0.273499995470047]}\n","Description: This configuration file is for the CFAR-10 data set. The CFAR32 data\n","    set consists of pictures of size 32x32. The model will have to accomodate these\n","    dimensions\n","dropout_percentage: 10\n","dropout_percentage_range: [10]\n","evaluate_the_model: 0\n","fit_the_model: 1\n","machine_dump_file_name_base: kera.cifar-10.trained\n","mkernel_regularizer_l2: 0.1\n","mkernel_regularizer_l2_range: [0.1]\n","number_of_epochs: 10\n","verbose: 1\n","\n","dropout_percentage: 0.1\n","mkernel_regularizer_l2: 0.1\n","number_of_epochs: 10\n"]}],"source":["# run python code\n","import tensorflow as tf\n","from tensorflow import keras as keras\n","\n","%cd \"/content/drive/MyDrive/colab_wolfs_git_clones/lizard\"\n","!ls \n","!pwd\n","\n","%cd \"picture_problem\"\n","!ls\n","!pwd\n","\n","!pip install reportlab\n","%run picture_3vgg_layers.py -i cifar-10-batches.yaml"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"picture_3vvg_layer","provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1639750401434}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}