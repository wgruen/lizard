{"cells":[{"cell_type":"markdown","metadata":{"id":"r6vgge28bsTY"},"source":["# Connect colab to Google Drive"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":310431,"status":"ok","timestamp":1639967445986,"user":{"displayName":"Wolfgang Gruen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01742609913198784862"},"user_tz":300},"id":"7uKG3cHUjFI4","outputId":"1e2c984f-94e1-439e-a235-a0d6d18961bd"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","drive  sample_data\n","/content\n","physical devises\n","[]\n","tensorflow version\n","2.7.0\n","keras version\n","2.7.0\n"]}],"source":["from google.colab import drive\n","import tensorflow as tf\n","from tensorflow import keras as keras\n","\n","drive.mount('/content/drive')\n","!ls\n","!pwd\n","\n","physical_devices = tf.config.list_physical_devices('GPU')\n","print(\"physical devises\")\n","print(physical_devices)\n","\n","print(\"tensorflow version\")\n","print(tf.__version__)\n","print(\"keras version\")\n","print(keras.__version__)"]},{"cell_type":"markdown","source":["# Run the machine"],"metadata":{"id":"Nwhz-LWcOW1R"}},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PmnklYq65Cx6","outputId":"e4070e46-2dfc-4a94-bb00-6179bf46c15b","executionInfo":{"status":"ok","timestamp":1639967547139,"user_tz":300,"elapsed":5377,"user":{"displayName":"Wolfgang Gruen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01742609913198784862"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/colab_wolfs_git_clones/lizard\n","first_neural_nets  nmf\tpicture_problem  README.md  statistical_analysis\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard/statistical_analysis/interquartile\n","configuration.yaml     interquartile_analyze_tp.py     interquartile_example\n","interquartile_analyze  interquartile_basic_example.py\n","/content/drive/MyDrive/colab_wolfs_git_clones/lizard/statistical_analysis/interquartile\n","Requirement already satisfied: reportlab in /usr/local/lib/python3.7/dist-packages (3.6.3)\n","Requirement already satisfied: pillow>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from reportlab) (7.1.2)\n","args:  Namespace(input_config_file='configuration.yaml')\n","Description: 'The test is about analysing a file or files in a direcotry, then creating\n","  pdf files read_file_or_dir \"../data/D1-150.csv\" read_file_or_dir \"../data/\"\n","\n","  The percentage offset for interquartile should be 25, since it is supposed to be\n","  25 percent and 75 percent'\n","cutoff_offset_percent: 25\n","read_file_or_dir: ../data/D1-150.csv\n","\n","file: /content/drive/MyDrive/colab_wolfs_git_clones/lizard/statistical_analysis/interquartile/../data/D1-150.csv\n","data \n"," [[  1. 123. 124. ...  92. 113.  96.]\n"," [  2.  90.  89. ...  98.  71.   0.]\n"," [  3.  89.  87. ...  77.  68. 108.]\n"," ...\n"," [148.  76.  89. ... 182.  81. 124.]\n"," [149.  94. 105. ...  61.  13. 242.]\n"," [150.  95. 100. ...  57.  70. 221.]]\n","X \n"," [  1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.  14.\n","  15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.  26.  27.  28.\n","  29.  30.  31.  32.  33.  34.  35.  36.  37.  38.  39.  40.  41.  42.\n","  43.  44.  45.  46.  47.  48.  49.  50.  51.  52.  53.  54.  55.  56.\n","  57.  58.  59.  60.  61.  62.  63.  64.  65.  66.  67.  68.  69.  70.\n","  71.  72.  73.  74.  75.  76.  77.  78.  79.  80.  81.  82.  83.  84.\n","  85.  86.  87.  88.  89.  90.  91.  92.  93.  94.  95.  96.  97.  98.\n","  99. 100. 101. 102. 103. 104. 105. 106. 107. 108. 109. 110. 111. 112.\n"," 113. 114. 115. 116. 117. 118. 119. 120. 121. 122. 123. 124. 125. 126.\n"," 127. 128. 129. 130. 131. 132. 133. 134. 135. 136. 137. 138. 139. 140.\n"," 141. 142. 143. 144. 145. 146. 147. 148. 149. 150.]\n","Y \n"," [[123. 124. 102. ...  92. 113.  96.]\n"," [ 90.  89. 103. ...  98.  71.   0.]\n"," [ 89.  87.  80. ...  77.  68. 108.]\n"," ...\n"," [ 76.  89.  65. ... 182.  81. 124.]\n"," [ 94. 105. 101. ...  61.  13. 242.]\n"," [ 95. 100. 101. ...  57.  70. 221.]]\n","array([[123., 124., 102., ...,  92., 113.,  96.],\n","       [ 90.,  89., 103., ...,  98.,  71.,   0.],\n","       [ 89.,  87.,  80., ...,  77.,  68., 108.],\n","       ...,\n","       [ 76.,  89.,  65., ..., 182.,  81., 124.],\n","       [ 94., 105., 101., ...,  61.,  13., 242.],\n","       [ 95., 100., 101., ...,  57.,  70., 221.]])\n","len           X / Y:  150 150\n","X flattened \n"," [  1.   1.   1. ... 150. 150. 150.]\n","len flattened X / Y:  1500 1500\n","X flattened \n"," [  1.   1.   1. ... 150. 150. 150.]\n","Y flattened \n"," [123. 124. 102. ...  57.  70. 221.]\n","q_low_percentile:  25\n","q_high:  75\n","quartile_low:  69.0\n","quartile_high:  125.0\n","interquartile_range:  56.0\n","Percentiles: \n","25th=69.0\n","75th=125.0\n","interquartile range: 56.0\n","Identified outliers: 39\n","Non-outlier observations: 1461\n","Identified outliers: 39\n","Outliers: \n"," [341.0, 236.0, 324.0, 214.0, 249.0, 213.0, 212.0, 216.0, 283.0, 289.0, 327.0, 387.0, 231.0, 338.0, 605.0, 340.0, 588.0, 309.0, 242.0, 227.0, 210.0, 238.0, 214.0, 236.0, 234.0, 284.0, 291.0, 343.0, 508.0, 251.0, 237.0, 928.0, 472.0, 308.0, 542.0, 288.0, 424.0, 242.0, 221.0]\n","Y_outliers: \n"," [ nan  nan  nan ...  nan  nan 221.]\n","len pos_outliers: \n"," 40\n","len pos_zeros: \n"," 73\n","df_summary: \n","                                             filename  ... upper_cutoff\n","0  /content/drive/MyDrive/colab_wolfs_git_clones/...  ...        209.0\n","\n","[1 rows x 8 columns]\n","filename:  /content/drive/MyDrive/colab_wolfs_git_clones/lizard/statistical_analysis/interquartile/../data/D1-150.csv\n","special data:  [[  79    7   10  341]\n"," [ 129   12   10  236]\n"," [ 259   25   10  324]\n"," [ 317   31    8  214]\n"," [ 318   31    9  249]\n"," [ 438   43    9  213]\n"," [ 498   49    9  212]\n"," [ 508   50    9  216]\n"," [ 549   54   10  283]\n"," [ 739   73   10  289]\n"," [ 749   74   10  327]\n"," [ 759   75   10  387]\n"," [ 778   77    9  231]\n"," [ 808   80    9  209]\n"," [ 809   80   10  338]\n"," [ 829   82   10  605]\n"," [ 899   89   10  340]\n"," [ 919   91   10  588]\n"," [ 929   92   10  309]\n"," [ 978   97    9  242]\n"," [1008  100    9  227]\n"," [1039  103   10  210]\n"," [1059  105   10  238]\n"," [1099  109   10  214]\n"," [1108  110    9  236]\n"," [1118  111    9  234]\n"," [1119  111   10  284]\n"," [1149  114   10  291]\n"," [1239  123   10  343]\n"," [1249  124   10  508]\n"," [1258  125    9  251]\n"," [1278  127    9  237]\n"," [1289  128   10  928]\n"," [1309  130   10  472]\n"," [1329  132   10  308]\n"," [1379  137   10  542]\n"," [1409  140   10  288]\n"," [1469  146   10  424]\n"," [1489  148   10  242]\n"," [1499  149   10  221]]\n","df:\n","      pos  row  column  value\n","0     79    7      10    341\n","1    129   12      10    236\n","2    259   25      10    324\n","3    317   31       8    214\n","4    318   31       9    249\n","5    438   43       9    213\n","6    498   49       9    212\n","7    508   50       9    216\n","8    549   54      10    283\n","9    739   73      10    289\n","10   749   74      10    327\n","11   759   75      10    387\n","12   778   77       9    231\n","13   808   80       9    209\n","14   809   80      10    338\n","15   829   82      10    605\n","16   899   89      10    340\n","17   919   91      10    588\n","18   929   92      10    309\n","19   978   97       9    242\n","20  1008  100       9    227\n","21  1039  103      10    210\n","22  1059  105      10    238\n","23  1099  109      10    214\n","24  1108  110       9    236\n","25  1118  111       9    234\n","26  1119  111      10    284\n","27  1149  114      10    291\n","28  1239  123      10    343\n","29  1249  124      10    508\n","30  1258  125       9    251\n","31  1278  127       9    237\n","32  1289  128      10    928\n","33  1309  130      10    472\n","34  1329  132      10    308\n","35  1379  137      10    542\n","36  1409  140      10    288\n","37  1469  146      10    424\n","38  1489  148      10    242\n","39  1499  149      10    221\n","special data:  [[  19    1   10    0]\n"," [  49    4   10    0]\n"," [  68    6    9    0]\n"," [  69    6   10    0]\n"," [  89    8   10    0]\n"," [ 119   11   10    0]\n"," [ 139   13   10    0]\n"," [ 169   16   10    0]\n"," [ 178   17    9    0]\n"," [ 179   17   10    0]\n"," [ 189   18   10    0]\n"," [ 199   19   10    0]\n"," [ 209   20   10    0]\n"," [ 218   21    9    0]\n"," [ 219   21   10    0]\n"," [ 229   22   10    0]\n"," [ 239   23   10    0]\n"," [ 249   24   10    0]\n"," [ 269   26   10    0]\n"," [ 277   27    8    0]\n"," [ 278   27    9    0]\n"," [ 279   27   10    0]\n"," [ 289   28   10    0]\n"," [ 299   29   10    0]\n"," [ 309   30   10    0]\n"," [ 339   33   10    0]\n"," [ 349   34   10    0]\n"," [ 389   38   10    0]\n"," [ 409   40   10    0]\n"," [ 429   42   10    0]\n"," [ 447   44    8    0]\n"," [ 448   44    9    0]\n"," [ 449   44   10    0]\n"," [ 469   46   10    0]\n"," [ 479   47   10    0]\n"," [ 569   56   10    0]\n"," [ 579   57   10    0]\n"," [ 599   59   10    0]\n"," [ 639   63   10    0]\n"," [ 649   64   10    0]\n"," [ 659   65   10    0]\n"," [ 688   68    9    0]\n"," [ 689   68   10    0]\n"," [ 709   70   10    0]\n"," [ 718   71    9    0]\n"," [ 719   71   10    0]\n"," [ 769   76   10    0]\n"," [ 819   81   10    0]\n"," [ 839   83   10    0]\n"," [ 849   84   10    0]\n"," [ 888   88    9    0]\n"," [ 889   88   10    0]\n"," [ 909   90   10    0]\n"," [ 939   93   10    0]\n"," [ 949   94   10    0]\n"," [ 969   96   10    0]\n"," [1019  101   10    0]\n"," [1029  102   10    0]\n"," [1079  107   10    0]\n"," [1089  108   10    0]\n"," [1138  113    9    0]\n"," [1139  113   10    0]\n"," [1179  117   10    0]\n"," [1199  119   10    0]\n"," [1209  120   10    0]\n"," [1269  126   10    0]\n"," [1283  128    4    0]\n"," [1284  128    5    0]\n"," [1285  128    6    0]\n"," [1286  128    7    0]\n"," [1287  128    8    0]\n"," [1368  136    9    0]\n"," [1428  142    9    0]]\n","df:\n","      pos  row  column  value\n","0     19    1      10      0\n","1     49    4      10      0\n","2     68    6       9      0\n","3     69    6      10      0\n","4     89    8      10      0\n","..   ...  ...     ...    ...\n","68  1285  128       6      0\n","69  1286  128       7      0\n","70  1287  128       8      0\n","71  1368  136       9      0\n","72  1428  142       9      0\n","\n","[73 rows x 4 columns]\n"]}],"source":["# run python code\n","import tensorflow as tf\n","from tensorflow import keras as keras\n","\n","%cd \"/content/drive/MyDrive/colab_wolfs_git_clones/lizard\"\n","!ls \n","!pwd\n","\n","%cd \"statistical_analysis/interquartile/\"\n","!ls\n","!pwd\n","\n","!pip install reportlab\n","%run interquartile_analyze_tp.py -i configuration.yaml"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"interquartile_analyze","provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1639750401434}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}